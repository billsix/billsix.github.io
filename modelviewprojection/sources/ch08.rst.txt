Rotation Fix Attempt 1 - Demo 08
================================

Purpose
^^^^^^^

Fix the rotation problem from the previous demo in a seemingly intuitive
way, but do it inelegantly.


.. figure:: static/screenshots/demo08.png
    :align: center
    :alt: Demo 08
    :figclass: align-center

    Demo 08



.. figure:: static/rotate-sloppy-forwards.gif
    :align: center
    :alt:
    :figclass: align-center

    Works but sloppy


How to Execute
^^^^^^^^^^^^^^

On Linux or on MacOS, in a command prompt, type "python src/demo08/demo.py".
On Windows, in a command prompt, type "python src\\demo08\\demo.py".


Move the Paddles using the Keyboard
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

==============  ================================
Keyboard Input  Action
==============  ================================
*w*             Move Left Paddle Up
*s*             Move Left Paddle Down
*k*             Move Right Paddle Down
*i*             Move Right Paddle Up

*d*             Increase Left Paddle's Rotation
*a*             Decrease Left Paddle's Rotation
*l*             Increase Right Paddle's Rotation
*j*             Decrease Right Paddle's Rotation
==============  ================================

Description
^^^^^^^^^^^

The problem in the last demo is that all rotations happen relative
to World Space's (0,0) and axises.  By translating our paddles to their position,
they are then rotated not around their modelspace center,
but by World Space's oriign.
In this demo, we move the paddles to their position,
back to the origin, rotate, and then back to their position.
This works, but it should be clear that it's an inefficient
method at best; at worst, we are not thinking about
the transformations clearly.

Taking a look at the various spaces, the code in this demo
is going to go back and forth between those spaces.  The code
in this demo is the wrong way to think about rendering.




Code
^^^^



.. literalinclude:: ../src/demo08/demo.py
   :language: python
   :linenos:
   :lineno-start: 90
   :lines: 90-111

"rotate_around" allows us to rotate around a point by taking
world space vertices




The Event Loop
~~~~~~~~~~~~~~




.. literalinclude:: ../src/demo08/demo.py
   :language: python
   :linenos:
   :lineno-start: 179
   :lines: 179

::

    ...


.. literalinclude:: ../src/demo08/demo.py
   :language: python
   :linenos:
   :lineno-start: 197
   :lines: 197-206


::

    ...


.. literalinclude:: ../src/demo08/demo.py
   :language: python
   :linenos:
   :lineno-start: 209
   :lines: 209-218


Although this works for now and looks like decent code, this is so sloppy, and
not thought out well at all.  We apply a transformation
from paddle space to world space, then do the inverse, then rotate,
and then do the first transformation from paddle space to world space again.

The images of the transformation sequence below should show how brain-dead it is,
and the Cayley graph is gross.



.. figure:: static/rotate-sloppy-forwards-3.png
    :align: center
    :alt: Demo 08
    :figclass: align-center

translating back to the origin

.. figure:: static/rotate-sloppy-forwards-4.png
    :align: center
    :alt: Demo 08
    :figclass: align-center

resetting the coordinate system

.. figure:: static/rotate-sloppy-forwards-5.png
    :align: center
    :alt: Demo 08
    :figclass: align-center


rotating

.. figure:: static/rotate-sloppy-forwards-6.png
    :align: center
    :alt: Demo 08
    :figclass: align-center

resetting the coordinate system

.. figure:: static/rotate-sloppy-forwards-7.png
    :align: center
    :alt: Demo 08
    :figclass: align-center



and them translating them back to their original origin

.. figure:: static/rotate-sloppy-forwards-8.png
    :align: center
    :alt: Demo 08
    :figclass: align-center




Cayley Graph
^^^^^^^^^^^^

.. figure:: static/demo08.png
    :align: center
    :alt: Demo 08
    :figclass: align-center
