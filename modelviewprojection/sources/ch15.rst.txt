Adding Depth - Enable Depth Buffer - Demo 15
============================================

Purpose
^^^^^^^
Fix the issue from the last demo, in which the square
was drawn over Paddle 1, even though the square
is further away from the camera.

.. figure:: static/screenshots/demo15.png
    :align: center
    :alt: Demo 15
    :figclass: align-center

    Demo 15


How to Execute
^^^^^^^^^^^^^^

On Linux or on MacOS, in a command prompt, type "python src/demo15/demo.py".
On Windows, in a command prompt, type "python src\\demo15\\demo.py".


Move the Paddles using the Keyboard
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

==============  ==============================================
Keyboard Input  Action
==============  ==============================================
*w*             Move Left Paddle Up
*s*             Move Left Paddle Down
*k*             Move Right Paddle Down
*i*             Move Right Paddle Up

*d*             Increase Left Paddle's Rotation
*a*             Decrease Left Paddle's Rotation
*l*             Increase Right Paddle's Rotation
*j*             Decrease Right Paddle's Rotation

*UP*            Move the camera up, moving the objects down
*DOWN*          Move the camera down, moving the objects up
*LEFT*          Move the camera left, moving the objects right
*RIGHT*         Move the camera right, moving the objects left

*q*             Rotate the square around it's center
*e*             Rotate the square around paddle 1's center
==============  ==============================================

Description
^^^^^^^^^^^

Use the depth buffer to make further objects hidden
if nearer objects are drawn in front



#. Set the clear depth to -1 (just like clearcolor, it's the default depth on a given fragment (pixel).

#. Set the depth func, i.e. the test to see if the newly drawn object should overwrite the color in the current fragment or not.

#. Enable the depth test.


..
   TODO
   Show what the color buffer and depth buffer would look like


.. literalinclude:: ../src/demo15/demo.py
   :language: python
   :linenos:
   :lineno-start: 56
   :lines: 56-58

the square should not be visible when hidden behind the paddle1,
as we did a translate by -10.
this is because without depth buffering, the object drawn last
clobbers the color of any previously drawn object at the pixel.
Try moving the square drawing code to the beginning, and you will
see that the square can be hidden behind the paddle.
